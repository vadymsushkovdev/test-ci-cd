name: Approval Check

permissions:
  contents: read
  issues:   write               # needed to create the approval Issue

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: prod
  cancel-in-progress: false

jobs:
  wait-approval:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Collect commit list
        id: commits
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const head = process.env.GITHUB_SHA;
            let base = context.payload.before;

            if (!base || base === head) {
              const r = await github.rest.repos.getCommit({ owner, repo, ref: head });
              base = r.data.parents[0].sha;
            }

            const res = await github.rest.repos.compareCommits({ owner, repo, base, head });

            const list = res.data.commits.map(c =>
              `- ${c.sha.slice(0,7)}  ${c.commit.message.split('\n')[0]} (@${c.author?.login ?? c.commit.author.name})`
            ).join('\n');

            core.setOutput('changes', list || '_No code changes in this push_');

      - uses: trstringer/manual-approval@v1
        id: approval
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: vadymsushkovdev
          minimum-approvals: 1
          fail-on-denial: true
          issue-title: "[deploy-approval] Production deploy ${{ github.sha }}"
          issue-body: |
            <!-- deploy-approval -->
            **Changes that will be deployed to production**

            ${{ steps.commits.outputs.changes }}
