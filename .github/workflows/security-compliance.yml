# .github/workflows/security-compliance.yml
name: Security Compliance Report

on:
  push:
    branches: [main]
  schedule:
    - cron: '*/5 * * * *'        # every 5 minutes (UTC)

permissions:
  contents: read
  security-events: write        # required for SARIF upload

concurrency:
  group: security-compliance
  cancel-in-progress: true      # kill any in-flight scan when a new run starts

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      # ─── 0. Checkout ────────────────────────────────────
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ─── 0.5 Setup Node ────────────────────────────────
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # ─── 1. Trivy scans (fs, image, IaC) ─────────────────
      - name: Trivy project scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .
          format: sarif
          output: trivy-project.sarif
          severity: CRITICAL,HIGH
          hide-progress: true

      - name: Build Docker image for scan
        run: docker build -t app:${{ github.sha }} .

      - name: Trivy image scan
        run: trivy image --format sarif --output trivy-image.sarif app:${{ github.sha }}

      - name: Trivy IaC scan
        run: trivy config infra/terraform --format sarif --output trivy-iac.sarif

      # ─── 2. Secrets scan with TruffleHog CLI ─────────────
      - name: Install TruffleHog
        run: |
          python3 -m pip install --upgrade pip
          pip install trufflehog

      - name: Run TruffleHog local JSON scan
        continue-on-error: true
        run: |
          echo "Scanning local repo at file://$GITHUB_WORKSPACE"
          trufflehog --json file://$GITHUB_WORKSPACE > trufflehog.json || true

      - name: Upload TruffleHog JSON as artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: trufflehog-results
          path: trufflehog.json

      # ─── 3. Merge SARIF files ────────────────────────────
      - name: Install sarif-cli & merge SARIF
        id: merge
        run: |
          npm install -g sarif-cli@1
          sarif merge \
            trivy-project.sarif \
            trivy-image.sarif \
            trivy-iac.sarif \
            -o merged.sarif
          echo "sarif=merged.sarif" >> "$GITHUB_OUTPUT"

      # ─── 4. Upload combined SARIF to GH Security tab ───────
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.merge.outputs.sarif }}



