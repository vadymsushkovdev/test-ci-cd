# .github/workflows/security-compliance.yml
name: Security Compliance Report

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  issues: write

concurrency:
  group: security-compliance
  cancel-in-progress: true

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      # ── 0. Checkout & Node setup ──────────────────────────
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # ── 1. Trivy scans (filesystem, image, IaC) ──────────
      - name: Trivy project scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .
          format: sarif
          output: trivy-project.sarif
          severity: CRITICAL,HIGH
          hide-progress: true

      - name: Build Docker image for scan
        run: docker build -t app:${{ github.sha }} .

      - name: Trivy image scan
        run: trivy image --format sarif --output trivy-image.sarif app:${{ github.sha }}

      - name: Trivy IaC scan
        run: trivy config infra/terraform --format sarif --output trivy-iac.sarif

      # ── 2. Merge only Trivy SARIF files ───────────────────
      - name: Merge Trivy SARIF
        run: |
          jq -s '{version:"2.1.0", runs: [.[].runs[]]}' \
            trivy-project.sarif \
            trivy-image.sarif \
            trivy-iac.sarif \
            > merged.sarif

      # ── 3. Extract HIGH/CRITICAL findings ─────────────────
      - name: Extract High/Critical results
        id: findings
        run: |
          jq -r '
            .runs[].results[]
            | select(.level=="error" or .level=="warning")
            | "\(.ruleId)|\(.locations[0].physicalLocation.artifactLocation.uri)|\(.locations[0].physicalLocation.region.startLine)//\(.level|ascii_upcase)"' \
            merged.sarif \
          | sort -u > findings.txt
          echo "found=$(wc -l < findings.txt)" >> "$GITHUB_OUTPUT"

      - name: "Debug: show findings"
        if: always()
        run: |
          echo "Found ${{ steps.findings.outputs.found }} high/critical findings:"
          cat findings.txt || echo "(none)"

      # ── 4. Open issues for new findings ────────────────────
      - name: Open issues for new findings
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const lines = fs.readFileSync('findings.txt', 'utf8')
              .trim().split('\n').filter(Boolean);
            const { owner, repo } = context.repo;

            for (const line of lines) {
              const [ruleId, file, lineNum, severity] = line.split(/[\|\/]+/);
              const sev = severity.toLowerCase();

              // Skip if an issue for this (rule + file) already exists
              const { data: issues } = await github.rest.issues.listForRepo({
                owner, repo,
                labels: ['security', sev],
                state: 'open',
                per_page: 50
              });
              if (issues.find(i => i.title.includes(ruleId) && i.title.includes(file))) {
                continue;
              }

              // Create a new issue
              const title = `[${severity}] ${ruleId} in ${file}:${lineNum}`;
              const body = `
              A new **${severity}** finding was detected by your Security Compliance workflow.
            
            - **Rule:** ${ruleId}
            - **File:** ${file}
            - **Line:** ${lineNum}
              
              Check the workflow run’s merged.sarif artifact for details.`;
              
              await github.rest.issues.create({
              owner, repo,
              title, body,
            labels: ['security', sev]
            });
              }
