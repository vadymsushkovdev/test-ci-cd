name: Security Pre-Merge Gate

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write

concurrency:
  group: security-gate
  cancel-in-progress: true

jobs:
  security-scan:
    name: Security Compliance Scan
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Install Python and Semgrep
      - name: Install Python + Semgrep
        run: |
          python -m pip install --upgrade pip
          pip install semgrep==1.128.0

      # 3. Run Semgrep SAST
      - name: Semgrep SAST
        run: |
          semgrep --config p/security --sarif --output semgrep.sarif src || true

      # 4. Install Trivy
      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b ~/.local/bin v0.51.1
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"

      # 5. Trivy filesystem scan
      - name: Trivy Filesystem Scan
        run: trivy fs --format sarif --output trivy-fs.sarif --severity CRITICAL,HIGH .

      # 6. Build Docker image for Trivy scan
      - name: Build Docker Image for Trivy
        run: docker build -t app:${{ github.sha }} .

      # 7. Trivy image scan
      - name: Trivy Image Scan
        run: trivy image --format sarif --output trivy-img.sarif --severity CRITICAL,HIGH app:${{ github.sha }}

      # 8. Download Trufflehog v3+ binary
      - name: Download Trufflehog v3
        run: |
          curl -L https://github.com/trufflesecurity/trufflehog/releases/latest/download/trufflehog-linux-amd64 -o trufflehog
          chmod +x trufflehog

      # 9. Run Trufflehog with SARIF output
      - name: Trufflehog Filesystem Scan (SARIF)
        run: |
          ./trufflehog filesystem --sarif --output trufflehog.sarif .
        continue-on-error: true

      # 10. Merge all SARIF reports
      - name: Merge SARIF reports
        run: |
          jq -s '{version:"2.1.0", runs: [.[].runs[]]}' \
            semgrep.sarif trufflehog.sarif trivy-fs.sarif trivy-img.sarif > merged.sarif

      # 11. Extract findings (errors/warnings only)
      - name: Extract findings
        id: findings
        run: |
          jq -r '
            .runs[].results[]
            | select(.level=="error" or .level=="warning")
            | "\(.tool.driver.name)|||\(.rule.id)|||\(.locations[0].physicalLocation.artifactLocation.uri)|||\(.lo
